Question 1: Write a Java program to demonstrate the basic usage of HashMap.
            Create a HashMap, add key-value pairs, and retrieve values based on keys.

Answer 1:  

import java.util.HashMap;

public class HashMapExample {
    public static void main(String[] args) {
        // Create a HashMap
        HashMap<String, Integer> ageMap = new HashMap<>();

        // Add key-value pairs
        ageMap.put("Alice", 25);
        ageMap.put("Bob", 30);
        ageMap.put("Charlie", 22);

        // Retrieve and print values
        System.out.println("Age of Alice: " + ageMap.get("Alice"));
        System.out.println("Age of Bob: " + ageMap.get("Bob"));
        System.out.println("Age of Charlie: " + ageMap.get("Charlie"));
    }
}

Output:Age of Alice: 25 Age of Bob: 30 Age of Charlie: 22



Question 2: Write a Java program to remove duplicate elements from an array using HashSet.

Answer 2: 

import java.util.HashSet;

public class RemoveDuplicates {
    public static void main(String[] args) {
        // Input array with duplicates
        int[] numbers = {1, 2, 3, 4, 2, 5, 6, 3, 7, 8, 1};

        // Use HashSet to remove duplicates
        HashSet<Integer> uniqueNumbers = new HashSet<>();
        for (int number : numbers) {
            uniqueNumbers.add(number);
        }

        // Print the array without duplicates
        System.out.println("Array without duplicates: " + uniqueNumbers);
    }
}

Output: Array without duplicates: [1, 2, 3, 4, 5, 6, 7, 8]


Question 3: Write a Java program to count the frequency of each element in an array using HashMap.

Answer 3:

import java.util.HashMap;

public class ElementFrequency {
    public static void main(String[] args) {
        // Input array
        int[] numbers = {1, 2, 3, 2, 4, 1, 5, 2, 3, 1};

        // Use HashMap to count frequency
        HashMap<Integer, Integer> frequencyMap = new HashMap<>();
        for (int number : numbers) {
            frequencyMap.put(number, frequencyMap.getOrDefault(number, 0) + 1);
        }

        // Print the frequency of each element
        System.out.println("Element frequency: " + frequencyMap);
    }
}

Output: Element frequency: {1=3, 2=3, 3=2, 4=1, 5=1}

Question 4: Write a Java program to check if two strings are anagrams using HashMap.

Answer 4: 

import java.util.HashMap;

public class AnagramCheck {
    public static void main(String[] args) {
        // Input strings
        String str1 = "listen";
        String str2 = "silent";

        // Use HashMap to check anagrams
        System.out.println("Are '" + str1 + "' and '" + str2 + "' anagrams? " + areAnagrams(str1, str2));
    }

    private static boolean areAnagrams(String str1, String str2) {
        if (str1.length() != str2.length()) {
            return false;
        }

        HashMap<Character, Integer> charCount = new HashMap<>();

        // Count characters in the first string
        for (char c : str1.toCharArray()) {
            charCount.put(c, charCount.getOrDefault(c, 0) + 1);
        }

        // Subtract counts for characters in the second string
        for (char c : str2.toCharArray()) {
            charCount.put(c, charCount.getOrDefault(c, 0) - 1);
        }

        // If all counts are zero, the strings are anagrams
        return charCount.values().stream().allMatch(count -> count == 0);
    }
}

Output: Are 'listen' and 'silent' anagrams? true


Question 5:     Write a Java program to update values in a HashMap.
                1. Create a HashMap to store product names and their prices.
                2. Add at least three products and their prices to the HashMap.
                3. Print the original prices.
                4. Update the prices of two products.
                5. Print the updated prices.


Answer 5:

import java.util.HashMap;

public class UpdateHashMapValues {
    public static void main(String[] args) {
        // Create a HashMap for product prices
        HashMap<String, Double> productPrices = new HashMap<>();

        // Add products and their prices
        productPrices.put("Laptop", 1200.0);
        productPrices.put("Phone", 800.0);
        productPrices.put("Tablet", 300.0);

        // Print original prices
        System.out.println("Original Prices: " + productPrices);

        // Update prices of two products
        productPrices.put("Laptop", 1300.0);
        productPrices.put("Phone", 850.0);

        // Print updated prices
        System.out.println("Updated Prices: " + productPrices);
    }
}

Output:  Original Prices: {Laptop=1200.0, Phone=800.0, Tablet=300.0}
         Updated Prices: {Laptop=1300.0, Phone=850.0, Tablet=300.0}
